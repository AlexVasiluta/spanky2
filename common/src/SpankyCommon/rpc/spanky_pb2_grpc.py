# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from SpankyCommon.rpc import spanky_pb2 as SpankyCommon_dot_rpc_dot_spanky__pb2


class SpankyStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NewPluginManager = channel.unary_unary(
                '/spanky.Spanky/NewPluginManager',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.NewPM.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.AckPM.FromString,
                )
        self.SetCommandList = channel.unary_unary(
                '/spanky.Spanky/SetCommandList',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.ReqCmdList.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.RespCmdList.FromString,
                )
        self.SendMessage = channel.unary_unary(
                '/spanky.Spanky/SendMessage',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.OutgoingThing.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.SomeObjectID.FromString,
                )
        self.GetEvent = channel.unary_stream(
                '/spanky.Spanky/GetEvent',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.GetEventReq.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Event.FromString,
                )
        self.GetServerIDs = channel.unary_unary(
                '/spanky.Spanky/GetServerIDs',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Empty.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.ObjectIDList.FromString,
                )
        self.GetServer = channel.unary_unary(
                '/spanky.Spanky/GetServer',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.SomeObjectID.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Server.FromString,
                )
        self.GetUsers = channel.unary_unary(
                '/spanky.Spanky/GetUsers',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.SomeObjectID.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.UserList.FromString,
                )
        self.GetUser = channel.unary_unary(
                '/spanky.Spanky/GetUser',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.UserRequest.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.User.FromString,
                )
        self.GetRole = channel.unary_unary(
                '/spanky.Spanky/GetRole',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.RoleRequest.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Role.FromString,
                )
        self.AddRoles = channel.unary_unary(
                '/spanky.Spanky/AddRoles',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.RoleAddRem.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Empty.FromString,
                )
        self.RemoveRoles = channel.unary_unary(
                '/spanky.Spanky/RemoveRoles',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.RoleAddRem.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Empty.FromString,
                )
        self.GetAttachments = channel.unary_unary(
                '/spanky.Spanky/GetAttachments',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.MessageRequest.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Attachments.FromString,
                )
        self.SendPM = channel.unary_unary(
                '/spanky.Spanky/SendPM',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.OutgoingPM.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.SomeObjectID.FromString,
                )
        self.GetChannel = channel.unary_unary(
                '/spanky.Spanky/GetChannel',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.ChannelRequest.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Channel.FromString,
                )
        self.DeleteMessage = channel.unary_unary(
                '/spanky.Spanky/DeleteMessage',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.MessageRequest.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Empty.FromString,
                )
        self.GetBotID = channel.unary_unary(
                '/spanky.Spanky/GetBotID',
                request_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Empty.SerializeToString,
                response_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.SomeObjectID.FromString,
                )


class SpankyServicer(object):
    """Missing associated documentation comment in .proto file."""

    def NewPluginManager(self, request, context):
        """When a client connects it exposes methods that the server can call
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCommandList(self, request, context):
        """Set or update the command list for a plugin manager
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Send message to specified channel
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEvent(self, request, context):
        """Interface that streams events
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServerIDs(self, request, context):
        """Get server list
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServer(self, request, context):
        """Get server data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUsers(self, request, context):
        """Get users in a server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Get users in a server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRole(self, request, context):
        """Get role from a server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddRoles(self, request, context):
        """Add role to a user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveRoles(self, request, context):
        """Remove a role
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAttachments(self, request, context):
        """Get attachments for a message
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendPM(self, request, context):
        """Send a private message
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChannel(self, request, context):
        """Get channel by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMessage(self, request, context):
        """Delete a message
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBotID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SpankyServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NewPluginManager': grpc.unary_unary_rpc_method_handler(
                    servicer.NewPluginManager,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.NewPM.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.AckPM.SerializeToString,
            ),
            'SetCommandList': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCommandList,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.ReqCmdList.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.RespCmdList.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.OutgoingThing.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.SomeObjectID.SerializeToString,
            ),
            'GetEvent': grpc.unary_stream_rpc_method_handler(
                    servicer.GetEvent,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.GetEventReq.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Event.SerializeToString,
            ),
            'GetServerIDs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServerIDs,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Empty.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.ObjectIDList.SerializeToString,
            ),
            'GetServer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServer,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.SomeObjectID.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Server.SerializeToString,
            ),
            'GetUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsers,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.SomeObjectID.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.UserList.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.UserRequest.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.User.SerializeToString,
            ),
            'GetRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRole,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.RoleRequest.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Role.SerializeToString,
            ),
            'AddRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.AddRoles,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.RoleAddRem.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Empty.SerializeToString,
            ),
            'RemoveRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveRoles,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.RoleAddRem.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Empty.SerializeToString,
            ),
            'GetAttachments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAttachments,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.MessageRequest.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Attachments.SerializeToString,
            ),
            'SendPM': grpc.unary_unary_rpc_method_handler(
                    servicer.SendPM,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.OutgoingPM.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.SomeObjectID.SerializeToString,
            ),
            'GetChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChannel,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.ChannelRequest.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Channel.SerializeToString,
            ),
            'DeleteMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMessage,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.MessageRequest.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Empty.SerializeToString,
            ),
            'GetBotID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBotID,
                    request_deserializer=SpankyCommon_dot_rpc_dot_spanky__pb2.Empty.FromString,
                    response_serializer=SpankyCommon_dot_rpc_dot_spanky__pb2.SomeObjectID.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'spanky.Spanky', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Spanky(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def NewPluginManager(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spanky.Spanky/NewPluginManager',
            SpankyCommon_dot_rpc_dot_spanky__pb2.NewPM.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.AckPM.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCommandList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spanky.Spanky/SetCommandList',
            SpankyCommon_dot_rpc_dot_spanky__pb2.ReqCmdList.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.RespCmdList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spanky.Spanky/SendMessage',
            SpankyCommon_dot_rpc_dot_spanky__pb2.OutgoingThing.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.SomeObjectID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/spanky.Spanky/GetEvent',
            SpankyCommon_dot_rpc_dot_spanky__pb2.GetEventReq.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.Event.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServerIDs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spanky.Spanky/GetServerIDs',
            SpankyCommon_dot_rpc_dot_spanky__pb2.Empty.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.ObjectIDList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spanky.Spanky/GetServer',
            SpankyCommon_dot_rpc_dot_spanky__pb2.SomeObjectID.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.Server.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spanky.Spanky/GetUsers',
            SpankyCommon_dot_rpc_dot_spanky__pb2.SomeObjectID.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.UserList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spanky.Spanky/GetUser',
            SpankyCommon_dot_rpc_dot_spanky__pb2.UserRequest.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spanky.Spanky/GetRole',
            SpankyCommon_dot_rpc_dot_spanky__pb2.RoleRequest.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.Role.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spanky.Spanky/AddRoles',
            SpankyCommon_dot_rpc_dot_spanky__pb2.RoleAddRem.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spanky.Spanky/RemoveRoles',
            SpankyCommon_dot_rpc_dot_spanky__pb2.RoleAddRem.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAttachments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spanky.Spanky/GetAttachments',
            SpankyCommon_dot_rpc_dot_spanky__pb2.MessageRequest.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.Attachments.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendPM(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spanky.Spanky/SendPM',
            SpankyCommon_dot_rpc_dot_spanky__pb2.OutgoingPM.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.SomeObjectID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spanky.Spanky/GetChannel',
            SpankyCommon_dot_rpc_dot_spanky__pb2.ChannelRequest.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.Channel.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spanky.Spanky/DeleteMessage',
            SpankyCommon_dot_rpc_dot_spanky__pb2.MessageRequest.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBotID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spanky.Spanky/GetBotID',
            SpankyCommon_dot_rpc_dot_spanky__pb2.Empty.SerializeToString,
            SpankyCommon_dot_rpc_dot_spanky__pb2.SomeObjectID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
