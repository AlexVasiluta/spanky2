# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: spanky/inputs/rpc/spanky.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='spanky/inputs/rpc/spanky.proto',
  package='spanky',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x1espanky/inputs/rpc/spanky.proto\x12\x06spanky\"\x19\n\x06NewCli\x12\x0f\n\x07methods\x18\x01 \x01(\t\"\x19\n\x06\x41\x63kCli\x12\x0f\n\x07methods\x18\x01 \x01(\t\"\x1f\n\x0bWorkRequest\x12\x10\n\x08workThis\x18\x01 \x01(\t\"\"\n\x0cWorkResponse\x12\x12\n\nworkResult\x18\x01 \x01(\t2u\n\x06Spanky\x12\x31\n\rExposeMethods\x12\x0e.spanky.NewCli\x1a\x0e.spanky.AckCli\"\x00\x12\x38\n\x06\x44oWork\x12\x13.spanky.WorkRequest\x1a\x13.spanky.WorkRequest\"\x00(\x01\x30\x01\x62\x06proto3')
)




_NEWCLI = _descriptor.Descriptor(
  name='NewCli',
  full_name='spanky.NewCli',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='methods', full_name='spanky.NewCli.methods', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=42,
  serialized_end=67,
)


_ACKCLI = _descriptor.Descriptor(
  name='AckCli',
  full_name='spanky.AckCli',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='methods', full_name='spanky.AckCli.methods', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=69,
  serialized_end=94,
)


_WORKREQUEST = _descriptor.Descriptor(
  name='WorkRequest',
  full_name='spanky.WorkRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='workThis', full_name='spanky.WorkRequest.workThis', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=96,
  serialized_end=127,
)


_WORKRESPONSE = _descriptor.Descriptor(
  name='WorkResponse',
  full_name='spanky.WorkResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='workResult', full_name='spanky.WorkResponse.workResult', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=129,
  serialized_end=163,
)

DESCRIPTOR.message_types_by_name['NewCli'] = _NEWCLI
DESCRIPTOR.message_types_by_name['AckCli'] = _ACKCLI
DESCRIPTOR.message_types_by_name['WorkRequest'] = _WORKREQUEST
DESCRIPTOR.message_types_by_name['WorkResponse'] = _WORKRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

NewCli = _reflection.GeneratedProtocolMessageType('NewCli', (_message.Message,), dict(
  DESCRIPTOR = _NEWCLI,
  __module__ = 'spanky.inputs.rpc.spanky_pb2'
  # @@protoc_insertion_point(class_scope:spanky.NewCli)
  ))
_sym_db.RegisterMessage(NewCli)

AckCli = _reflection.GeneratedProtocolMessageType('AckCli', (_message.Message,), dict(
  DESCRIPTOR = _ACKCLI,
  __module__ = 'spanky.inputs.rpc.spanky_pb2'
  # @@protoc_insertion_point(class_scope:spanky.AckCli)
  ))
_sym_db.RegisterMessage(AckCli)

WorkRequest = _reflection.GeneratedProtocolMessageType('WorkRequest', (_message.Message,), dict(
  DESCRIPTOR = _WORKREQUEST,
  __module__ = 'spanky.inputs.rpc.spanky_pb2'
  # @@protoc_insertion_point(class_scope:spanky.WorkRequest)
  ))
_sym_db.RegisterMessage(WorkRequest)

WorkResponse = _reflection.GeneratedProtocolMessageType('WorkResponse', (_message.Message,), dict(
  DESCRIPTOR = _WORKRESPONSE,
  __module__ = 'spanky.inputs.rpc.spanky_pb2'
  # @@protoc_insertion_point(class_scope:spanky.WorkResponse)
  ))
_sym_db.RegisterMessage(WorkResponse)



_SPANKY = _descriptor.ServiceDescriptor(
  name='Spanky',
  full_name='spanky.Spanky',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=165,
  serialized_end=282,
  methods=[
  _descriptor.MethodDescriptor(
    name='ExposeMethods',
    full_name='spanky.Spanky.ExposeMethods',
    index=0,
    containing_service=None,
    input_type=_NEWCLI,
    output_type=_ACKCLI,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DoWork',
    full_name='spanky.Spanky.DoWork',
    index=1,
    containing_service=None,
    input_type=_WORKREQUEST,
    output_type=_WORKREQUEST,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SPANKY)

DESCRIPTOR.services_by_name['Spanky'] = _SPANKY

# @@protoc_insertion_point(module_scope)
